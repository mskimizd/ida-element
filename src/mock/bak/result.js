exports.sets = [
    {
        filename:"1test.js",
        content:'...MT("line_comment", "[comment // <span class="keyword">Hello</span> world]"); // Alignment tests MT("align_port_map_style1", /** * mod mod(.a(a), * .b(b) * ); */ "[variable mod] [variable mod][bracket (].[variable a]...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\verilog\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"1test.js",
        content:'...or", "[tag %h1][attribute .<span class="keyword">Hello</span>] Hey There"); MT("docType", "[tag !!! XML]"); MT("comment", "[comment / <span class="keyword">Hello</span> WORLD]"); MT("notComment", "[tag %h1] This is not a / comment "); MT("attributes", "[tag %a]...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\haml\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"1test.js",
        content:'...tor", "[qualifier .foo-bar_<span class="keyword">Hello</span>] { }"); MT("idSelector", "[builtin #foo] { [error #foo] }"); MT("tagSelectorUnclosed", "[tag foo] { [property margin]: [number 0] } [tag bar] { }"); MT("tagStringNoQuotes", "[tag...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"1CodeMirror: LESS mode",
        content:'... blue } /* first rule */ span[<span class="keyword">Hello</span>="Ocean"][goodbye="Land"] E[foo]{ padding:65px; } input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button { -webkit-appearance: none; // Inner-padding is...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\less.html',
        date:'2017-9-1 14:03',
        type:'html',
    },
    {
        filename:"1scss_test.js",
        content:'... MT("selector", "[builtin #<span class="keyword">Hello</span>][qualifier .world]{}"); MT("singleline_comment", "[comment // this is a comment]"); MT("multiline_comment", "[comment /*foobar*/]"); MT("attribute_with_hyphen", "[tag foo] { [proper...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\scss_test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"1controlRightSidebar.html",
        content:"... {:lang('<span class='keyword'>Hello</span>')}!{:lang('please')}{:lang('login')}{:lang('register')} {:lang('<span class='keyword'>Hello</span>')}! {:...",
        location:'C:/Users/Tom/Desktop/theflow/20171104download/theflow/template/shop/blue/controlRightSidebar.html',
        date:'2017-8-21 9:49',
        type:'html',
    },
    {
        filename:"1controlRightSidebar.html",
        content:"... {:lang('<span class='keyword'>Hello</span>')}!{:lang('please')}{:lang('login')} | {:lang('register')} {:lang('<span class='keyword'>Hello</span>')}! {:...",
        location:'C:\Users\Tom\Desktop\theflow\Theflow20171006\theflow\template\shop\blue\controlRightSidebar.html',
        date:'2017-8-21 9:49',
        type:'html',
    },
    {
        filename:"1leaflet-src.js",
        content:"...a template string of the form `'<span class='keyword'>Hello</span> {a}, {b}'` // and a data object like `{a: 'foo', b: 'bar'}`, returns evaluated string // `('<span class='keyword'>Hello</span> foo, bar')`. You can also specify functions instead of strings for // data values 钬?they will be eva...",
        location:'D:\$RECYCLE.BIN\S-1-5-21-2748820898-4015887419-2030963319-1000\$R07Q15U\app\vendor\leaflet.1.2.0\leaflet-src.js',
        date:'2017-8-8 13:51',
        type:'js',
    },
    {
        filename:"1searchCtrl.js",
        content:"...s = c_icons; // $log.log('<span class='keyword'>Hello</span>'); // $log.info('<span class='keyword'>Hello</span>'); // $log.warn('<span class='keyword'>Hello</span>'); // $log.error('<span class='keyword'>Hello</span>'); // $log.debug('<span class='keyword'>Hello</span>'); $scope.loaded = true; $scope.resultShow = false; $scope.pageStatus = 'init'; $sco...",
        location:'C:\Users\Tom\Desktop\webapps\Vr\js\controllers\searchCtrl.js',
        date:'2017-6-22 14:04',
        type:'js',
    },
    {
        filename:"1sactionCtrl.js",
        content:"...cope.$broadcast('myupdateData','<span class='keyword'>Hello</span>'); event.stopPropagation(); angular.element('.slideinpage').addClass('slideIn'); } // 鍒囨崲铡熷鏁版嵁 $scope.toggleArray = [false,false,false,false,false,false,f...",
        location:'C:\Users\Tom\Desktop\webapps\Vr\js\controllers\sactionCtrl.js',
        date:'2017-3-17 12:44',
        type:'js',
    },



    {
        filename:"2sactionCtrl.js",
        content:"...cope.$broadcast('myupdateData','<span class='keyword'>Hello</span>'); event.stopPropagation(); angular.element('.slideinpage').addClass('slideIn'); } // 鍒囨崲铡熷鏁版嵁 $scope.toggleArray = [false,false,false,false,false,false,f...",
        location:'C:\Users\Tom\Desktop\webapps\Vr\js\controllers\sactionCtrl.js',
        date:'2017-3-17 12:44',
        type:'js',
    },
    {
        filename:"2searchCtrl.js",
        content:"...s = c_icons; // $log.log('<span class='keyword'>Hello</span>'); // $log.info('<span class='keyword'>Hello</span>'); // $log.warn('<span class='keyword'>Hello</span>'); // $log.error('<span class='keyword'>Hello</span>'); // $log.debug('<span class='keyword'>Hello</span>'); $scope.loaded = true; $scope.resultShow = false; $scope.pageStatus = 'init'; $sco...",
        location:'C:\Users\Tom\Desktop\webapps\Vr\js\controllers\searchCtrl.js',
        date:'2017-6-22 14:04',
        type:'js',
    }, 
    {
        filename:"2leaflet-src.js",
        content:"...a template string of the form `'<span class='keyword'>Hello</span> {a}, {b}'` // and a data object like `{a: 'foo', b: 'bar'}`, returns evaluated string // `('<span class='keyword'>Hello</span> foo, bar')`. You can also specify functions instead of strings for // data values 钬?they will be eva...",
        location:'D:\$RECYCLE.BIN\S-1-5-21-2748820898-4015887419-2030963319-1000\$R07Q15U\app\vendor\leaflet.1.2.0\leaflet-src.js',
        date:'2017-8-8 13:51',
        type:'js',
    },
    {
        filename:"2controlRightSidebar.html",
        content:"... {:lang('<span class='keyword'>Hello</span>')}!{:lang('please')}{:lang('login')} | {:lang('register')} {:lang('<span class='keyword'>Hello</span>')}! {:...",
        location:'C:\Users\Tom\Desktop\theflow\Theflow20171006\theflow\template\shop\blue\controlRightSidebar.html',
        date:'2017-8-21 9:49',
        type:'html',
    },
    {
        filename:"2controlRightSidebar.html",
        content:"... {:lang('<span class='keyword'>Hello</span>')}!{:lang('please')}{:lang('login')}{:lang('register')} {:lang('<span class='keyword'>Hello</span>')}! {:...",
        location:'C:/Users/Tom/Desktop/theflow/20171104download/theflow/template/shop/blue/controlRightSidebar.html',
        date:'2017-8-21 9:49',
        type:'html',
    },
    {
        filename:"2scss_test.js",
        content:'... MT("selector", "[builtin #<span class="keyword">Hello</span>][qualifier .world]{}"); MT("singleline_comment", "[comment // this is a comment]"); MT("multiline_comment", "[comment /*foobar*/]"); MT("attribute_with_hyphen", "[tag foo] { [proper...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\scss_test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"2CodeMirror: LESS mode",
        content:'... blue } /* first rule */ span[<span class="keyword">Hello</span>="Ocean"][goodbye="Land"] E[foo]{ padding:65px; } input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button { -webkit-appearance: none; // Inner-padding is...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\less.html',
        date:'2017-9-1 14:03',
        type:'html',
    },
    {
        filename:"2test.js",
        content:'...tor", "[qualifier .foo-bar_<span class="keyword">Hello</span>] { }"); MT("idSelector", "[builtin #foo] { [error #foo] }"); MT("tagSelectorUnclosed", "[tag foo] { [property margin]: [number 0] } [tag bar] { }"); MT("tagStringNoQuotes", "[tag...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"2test.js",
        content:'...or", "[tag %h1][attribute .<span class="keyword">Hello</span>] Hey There"); MT("docType", "[tag !!! XML]"); MT("comment", "[comment / <span class="keyword">Hello</span> WORLD]"); MT("notComment", "[tag %h1] This is not a / comment "); MT("attributes", "[tag %a]...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\haml\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"2test.js",
        content:'...MT("line_comment", "[comment // <span class="keyword">Hello</span> world]"); // Alignment tests MT("align_port_map_style1", /** * mod mod(.a(a), * .b(b) * ); */ "[variable mod] [variable mod][bracket (].[variable a]...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\verilog\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },




    {
        filename:"3test.js",
        content:'...MT("line_comment", "[comment // <span class="keyword">Hello</span> world]"); // Alignment tests MT("align_port_map_style1", /** * mod mod(.a(a), * .b(b) * ); */ "[variable mod] [variable mod][bracket (].[variable a]...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\verilog\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"3test.js",
        content:'...or", "[tag %h1][attribute .<span class="keyword">Hello</span>] Hey There"); MT("docType", "[tag !!! XML]"); MT("comment", "[comment / <span class="keyword">Hello</span> WORLD]"); MT("notComment", "[tag %h1] This is not a / comment "); MT("attributes", "[tag %a]...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\haml\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"3test.js",
        content:'...tor", "[qualifier .foo-bar_<span class="keyword">Hello</span>] { }"); MT("idSelector", "[builtin #foo] { [error #foo] }"); MT("tagSelectorUnclosed", "[tag foo] { [property margin]: [number 0] } [tag bar] { }"); MT("tagStringNoQuotes", "[tag...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"3CodeMirror: LESS mode",
        content:'... blue } /* first rule */ span[<span class="keyword">Hello</span>="Ocean"][goodbye="Land"] E[foo]{ padding:65px; } input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button { -webkit-appearance: none; // Inner-padding is...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\less.html',
        date:'2017-9-1 14:03',
        type:'html',
    },
    {
        filename:"3scss_test.js",
        content:'... MT("selector", "[builtin #<span class="keyword">Hello</span>][qualifier .world]{}"); MT("singleline_comment", "[comment // this is a comment]"); MT("multiline_comment", "[comment /*foobar*/]"); MT("attribute_with_hyphen", "[tag foo] { [proper...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\scss_test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"3controlRightSidebar.html",
        content:"... {:lang('<span class='keyword'>Hello</span>')}!{:lang('please')}{:lang('login')}{:lang('register')} {:lang('<span class='keyword'>Hello</span>')}! {:...",
        location:'C:/Users/Tom/Desktop/theflow/20171104download/theflow/template/shop/blue/controlRightSidebar.html',
        date:'2017-8-21 9:49',
        type:'html',
    },
    {
        filename:"3controlRightSidebar.html",
        content:"... {:lang('<span class='keyword'>Hello</span>')}!{:lang('please')}{:lang('login')} | {:lang('register')} {:lang('<span class='keyword'>Hello</span>')}! {:...",
        location:'C:\Users\Tom\Desktop\theflow\Theflow20171006\theflow\template\shop\blue\controlRightSidebar.html',
        date:'2017-8-21 9:49',
        type:'html',
    },
    {
        filename:"3leaflet-src.js",
        content:"...a template string of the form `'<span class='keyword'>Hello</span> {a}, {b}'` // and a data object like `{a: 'foo', b: 'bar'}`, returns evaluated string // `('<span class='keyword'>Hello</span> foo, bar')`. You can also specify functions instead of strings for // data values 钬?they will be eva...",
        location:'D:\$RECYCLE.BIN\S-1-5-21-2748820898-4015887419-2030963319-1000\$R07Q15U\app\vendor\leaflet.1.2.0\leaflet-src.js',
        date:'2017-8-8 13:51',
        type:'js',
    },
    {
        filename:"3searchCtrl.js",
        content:"...s = c_icons; // $log.log('<span class='keyword'>Hello</span>'); // $log.info('<span class='keyword'>Hello</span>'); // $log.warn('<span class='keyword'>Hello</span>'); // $log.error('<span class='keyword'>Hello</span>'); // $log.debug('<span class='keyword'>Hello</span>'); $scope.loaded = true; $scope.resultShow = false; $scope.pageStatus = 'init'; $sco...",
        location:'C:\Users\Tom\Desktop\webapps\Vr\js\controllers\searchCtrl.js',
        date:'2017-6-22 14:04',
        type:'js',
    },
    {
        filename:"3sactionCtrl.js",
        content:"...cope.$broadcast('myupdateData','<span class='keyword'>Hello</span>'); event.stopPropagation(); angular.element('.slideinpage').addClass('slideIn'); } // 鍒囨崲铡熷鏁版嵁 $scope.toggleArray = [false,false,false,false,false,false,f...",
        location:'C:\Users\Tom\Desktop\webapps\Vr\js\controllers\sactionCtrl.js',
        date:'2017-3-17 12:44',
        type:'js',
    },


    {
        filename:"4sactionCtrl.js",
        content:"...cope.$broadcast('myupdateData','<span class='keyword'>Hello</span>'); event.stopPropagation(); angular.element('.slideinpage').addClass('slideIn'); } // 鍒囨崲铡熷鏁版嵁 $scope.toggleArray = [false,false,false,false,false,false,f...",
        location:'C:\Users\Tom\Desktop\webapps\Vr\js\controllers\sactionCtrl.js',
        date:'2017-3-17 12:44',
        type:'js',
    },
    {
        filename:"4searchCtrl.js",
        content:"...s = c_icons; // $log.log('<span class='keyword'>Hello</span>'); // $log.info('<span class='keyword'>Hello</span>'); // $log.warn('<span class='keyword'>Hello</span>'); // $log.error('<span class='keyword'>Hello</span>'); // $log.debug('<span class='keyword'>Hello</span>'); $scope.loaded = true; $scope.resultShow = false; $scope.pageStatus = 'init'; $sco...",
        location:'C:\Users\Tom\Desktop\webapps\Vr\js\controllers\searchCtrl.js',
        date:'2017-6-22 14:04',
        type:'js',
    }, 
    {
        filename:"4leaflet-src.js",
        content:"...a template string of the form `'<span class='keyword'>Hello</span> {a}, {b}'` // and a data object like `{a: 'foo', b: 'bar'}`, returns evaluated string // `('<span class='keyword'>Hello</span> foo, bar')`. You can also specify functions instead of strings for // data values 钬?they will be eva...",
        location:'D:\$RECYCLE.BIN\S-1-5-21-2748820898-4015887419-2030963319-1000\$R07Q15U\app\vendor\leaflet.1.2.0\leaflet-src.js',
        date:'2017-8-8 13:51',
        type:'js',
    },
    {
        filename:"4controlRightSidebar.html",
        content:"... {:lang('<span class='keyword'>Hello</span>')}!{:lang('please')}{:lang('login')} | {:lang('register')} {:lang('<span class='keyword'>Hello</span>')}! {:...",
        location:'C:\Users\Tom\Desktop\theflow\Theflow20171006\theflow\template\shop\blue\controlRightSidebar.html',
        date:'2017-8-21 9:49',
        type:'html',
    },
    {
        filename:"4controlRightSidebar.html",
        content:"... {:lang('<span class='keyword'>Hello</span>')}!{:lang('please')}{:lang('login')}{:lang('register')} {:lang('<span class='keyword'>Hello</span>')}! {:...",
        location:'C:/Users/Tom/Desktop/theflow/20171104download/theflow/template/shop/blue/controlRightSidebar.html',
        date:'2017-8-21 9:49',
        type:'html',
    },
    {
        filename:"4scss_test.js",
        content:'... MT("selector", "[builtin #<span class="keyword">Hello</span>][qualifier .world]{}"); MT("singleline_comment", "[comment // this is a comment]"); MT("multiline_comment", "[comment /*foobar*/]"); MT("attribute_with_hyphen", "[tag foo] { [proper...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\scss_test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"4CodeMirror: LESS mode",
        content:'... blue } /* first rule */ span[<span class="keyword">Hello</span>="Ocean"][goodbye="Land"] E[foo]{ padding:65px; } input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button { -webkit-appearance: none; // Inner-padding is...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\less.html',
        date:'2017-9-1 14:03',
        type:'html',
    },
    {
        filename:"4test.js",
        content:'...tor", "[qualifier .foo-bar_<span class="keyword">Hello</span>] { }"); MT("idSelector", "[builtin #foo] { [error #foo] }"); MT("tagSelectorUnclosed", "[tag foo] { [property margin]: [number 0] } [tag bar] { }"); MT("tagStringNoQuotes", "[tag...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\css\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"4test.js",
        content:'...or", "[tag %h1][attribute .<span class="keyword">Hello</span>] Hey There"); MT("docType", "[tag !!! XML]"); MT("comment", "[comment / <span class="keyword">Hello</span> WORLD]"); MT("notComment", "[tag %h1] This is not a / comment "); MT("attributes", "[tag %a]...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\haml\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },
    {
        filename:"4test.js",
        content:'...MT("line_comment", "[comment // <span class="keyword">Hello</span> world]"); // Alignment tests MT("align_port_map_style1", /** * mod mod(.a(a), * .b(b) * ); */ "[variable mod] [variable mod][bracket (].[variable a]...',
        location:'D:\workspace\Voxer\WebContent\vendor\codemirror\mode\verilog\test.js',
        date:'2017-9-1 14:03',
        type:'js',
    },



       

               
]